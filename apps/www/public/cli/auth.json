{
  "$schema": "http://localhost:3000/cli/schema.json",
  "description": "Initialize Lucia authentication",
  "title": "Lucia Auth",
  "version": 1.0,
  "operation": [
    {
      "op": "add",
      "content": "import { Lucia } from \"lucia\";\nimport { adapter } from \"./adapter\"\n\n// import { webcrypto } from \"crypto\";\n// globalThis.crypto = webcrypto as Crypto;\n\nexport const lucia = new Lucia(adapter, {\n  sessionCookie: {\n    attributes: {\n      secure: process.env.NODE_ENV === \"production\"\n    }\n  },\n  getUserAttributes: (attributes) => {\n    return {\n      username: attributes.username\n    };\n  }\n});\n\ndeclare module \"lucia\" {\n  interface Register {\n    Lucia: typeof lucia;\n    DatabaseUserAttributes: Omit<{ username: string }, \"id\">;\n  }\n}\n\nexport * from \"./auth-schema\"\nexport * from \"./options\"",
      "targetSrc": "~/auth/index.ts"
    },
    {
      "op": "add",
      "content": "import { lucia } from \"./index\";\n\nexport async function signOut(request: Request) {\n    const session = lucia.readSessionCookie(request.headers.get(\"Cookie\") ?? \"\");\n    if (!session) return new Response(null, { status: 401 });\n    await lucia.invalidateSession(session);\n    const sessionCookie = lucia.createBlankSessionCookie();\n    return new Response(null, {\n        status: 302,\n        headers: {\n            Location: \"/\",\n            \"Set-Cookie\": sessionCookie.serialize()\n        }\n    });\n}",
      "targetSrc": "~/auth/sign-out.ts"
    },
    {
      "op": "readJSON",
      "targetSrc": "./command.config.json",
      "path": "db.engine",
      "value": "$dbEngine",
      "values": {
        "postgres": [
          {
            "op": "add",
            "content": "import { DrizzlePostgreSQLAdapter } from \"@lucia-auth/adapter-drizzle\"\nimport { db, sessionTable, userTable } from \"~/db\"\n\nexport const adapter = new DrizzlePostgreSQLAdapter(db, sessionTable, userTable);",
            "targetSrc": "~/auth/adapter.ts"
          },
          {
            "op": "add",
            "content": "import { pgTable, text, timestamp } from \"drizzle-orm/pg-core\";\n\nexport const userTable = pgTable('users', {\n  id: text('id').primaryKey(),\n  username: text('username').default(''),\n  passwordHash: text('password_hash').default('')\n});\n\nexport const sessionTable = pgTable('session', {\n  id: text('id').primaryKey(),\n  userId: text('user_id').references(() => userTable.id).notNull(),\n  expiresAt: timestamp('expires_at').notNull()\n})",
            "targetSrc": "~/auth/auth-schema.ts"
          },
          {
            "op": "add-export",
            "targetSrc": "~/db/schema.ts",
            "content": "export * from '~/auth/auth-schema'"
          },
          {
            "op": "select",
            "title": "Do you want to setup OAuth ?",
            "value": "$setupOAuth",
            "selections": [
              {"label": "Yes", "value": "yes"},
              {"label": "No", "value": "no"}
            ],
            "values": {
              "no": [],
              "yes": [
                {"op": "install", "dep": ["arctic"]},
                {
                  "op": "add",
                  "content": "import { pgTable, text, primaryKey } from \"drizzle-orm/pg-core\";\n\nexport const oauthAccountTable = pgTable('oauth_account', {\n  providerId: text('provider_id').notNull(),\n  providerUserId: text('provider_user_id').notNull(),\n  userId: text('user_id').notNull(),\n}, (table) => ({\n  pk: primaryKey({ columns: [table.providerId, table.providerUserId] })\n}));",
                  "targetSrc": "~/auth/oauth-schema.ts"
                },
                {
                  "op": "add-export",
                  "targetSrc": "~/db/schema.ts",
                  "content": "export * from '~/auth/oauth-schema'"
                }
              ]
            }
          }
        ],
        "sqlite": [
          {
            "op": "add",
            "content": "import { DrizzleSQLiteAdapter } from \"@lucia-auth/adapter-drizzle\"\nimport { db, sessionTable, userTable } from \"~/db\"\n\nexport const adapter = new DrizzleSQLiteAdapter(db, sessionTable, userTable);",
            "targetSrc": "~/auth/adapter.ts"
          },
          {
            "op": "add",
            "content": "import { text, sqliteTable, integer } from \"drizzle-orm/sqlite-core\";\n\nexport const userTable = sqliteTable('users', {\n  id: text('id').primaryKey(),\n  username: text('username').default(''),\n  passwordHash: text('password_hash').default('')\n});\n\nexport const sessionTable = sqliteTable('session', {\n  id: text('id').primaryKey(),\n  userId: text('user_id').references(() => userTable.id).notNull(),\n  expiresAt: integer('expires_at').notNull()\n})",
            "targetSrc": "~/auth/auth-schema.ts"
          },
          {
            "op": "add-export",
            "targetSrc": "~/db/schema.ts",
            "content": "export * from '~/db/auth-schema'"
          },
          {
            "op": "select",
            "title": "Do you want to setup OAuth ?",
            "value": "$setupOAuth",
            "selections": [
              {"label": "Yes", "value": "yes"},
              {"label": "No", "value": "no"}
            ],
            "values": {
              "no": [],
              "yes": [
                {"op": "install", "dep": ["arctic"]},
                {
                  "op": "add",
                  "content": "import { primaryKey, sqliteTable, text } from \"drizzle-orm/sqlite-core\";\n\nexport const oauthAccountTable = sqliteTable('oauth_account', {\n  providerId: text('provider_id').notNull(),\n  providerUserId: text('provider_user_id').notNull(),\n  userId: text('user_id').notNull(),\n}, (table) => ({\n  pk: primaryKey({ columns: [table.providerId, table.providerUserId] }),\n}));",
                  "targetSrc": "~/auth/oauth-schema.ts"
                },
                {
                  "op": "add-export",
                  "targetSrc": "~/db/schema.ts",
                  "content": "export * from '~/auth/oauth-schema'"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "op": "add",
      "content": "",
      "targetSrc": "~/auth/options/index.ts"
    },
    {
      "op": "install",
      "dep": ["lucia", "@lucia-auth/adapter-drizzle"]
    }
  ]
}
